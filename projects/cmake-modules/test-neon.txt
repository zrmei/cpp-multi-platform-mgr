#include <iostream>
#include <arm_neon.h>

void SgemmNeon(
    float* pfA, float* pfB, unsigned int nA, unsigned int nB, unsigned int nC, float* pfResult)
{
    int i, j, k;

    float32x4_t sum0, sum1, sum2, sum3;
    float32x4_t matrix0, matrix1, matrix2, matrix3;
    float32x4_t vec;

    float32x2_t sum0h, sum0l;
    float32x2_t sum1h, sum1l;
    float32x2_t sum2h, sum2l;
    float32x2_t sum3h, sum3l;

    const float *pfMatA0, *pfMatA1, *pfMatA2, *pfMatA3, *pfMatB;

    j = 0;

    for (i = 0; i < nB; i += 4) {
        sum0 = vmovq_n_f32(0);
        sum1 = vmovq_n_f32(0);
        sum2 = vmovq_n_f32(0);
        sum3 = vmovq_n_f32(0);

        pfMatB = pfB;

        pfMatA0 = pfA + i * nA;
        pfMatA1 = pfMatA0 + nA;
        pfMatA2 = pfMatA1 + nA;
        pfMatA3 = pfMatA2 + nA;

        pfResult[j * nC + i] = 0;
        for (k = 0; k < nA; k += 4) {
            vec = vld1q_f32(pfMatB);
            matrix0 = vld1q_f32(pfMatA0);
            matrix1 = vld1q_f32(pfMatA1);
            matrix2 = vld1q_f32(pfMatA2);
            matrix3 = vld1q_f32(pfMatA3);

            sum0 = vaddq_f32(sum0, vmulq_f32(vec, matrix0));
            sum1 = vaddq_f32(sum1, vmulq_f32(vec, matrix1));
            sum2 = vaddq_f32(sum2, vmulq_f32(vec, matrix2));
            sum3 = vaddq_f32(sum3, vmulq_f32(vec, matrix3));

            pfMatA0 += 4;
            pfMatA1 += 4;
            pfMatA2 += 4;
            pfMatA3 += 4;

            pfMatB += 4;
        }
        sum0h = vget_high_f32(sum0);
        sum0l = vget_low_f32(sum0);
        sum0h = vadd_f32(sum0h, sum0l);

        sum1h = vget_high_f32(sum1);
        sum1l = vget_low_f32(sum1);
        sum1h = vadd_f32(sum1h, sum1l);

        sum2h = vget_high_f32(sum2);
        sum2l = vget_low_f32(sum2);
        sum2h = vadd_f32(sum2h, sum2l);

        sum3h = vget_high_f32(sum3);
        sum3l = vget_low_f32(sum3);
        sum3h = vadd_f32(sum3h, sum3l);

        pfResult[j * nC + i] = vget_lane_f32(sum0h, 0) + vget_lane_f32(sum0h, 1);
        pfResult[j * nC + i + 1] = vget_lane_f32(sum1h, 0) + vget_lane_f32(sum1h, 1);
        pfResult[j * nC + i + 2] = vget_lane_f32(sum2h, 0) + vget_lane_f32(sum2h, 1);
        pfResult[j * nC + i + 3] = vget_lane_f32(sum3h, 0) + vget_lane_f32(sum3h, 1);

        /*pfResult[j*nC+i] = vgetq_lane_f32(sum0, 0) + vgetq_lane_f32(sum0, 1) + vgetq_lane_f32(sum0, 2) + vgetq_lane_f32(sum0, 3);
        pfResult[j*nC+i+1] = vgetq_lane_f32(sum1, 0) + vgetq_lane_f32(sum1, 1) + vgetq_lane_f32(sum1, 2) + vgetq_lane_f32(sum1, 3);
        pfResult[j*nC+i+2] = vgetq_lane_f32(sum2, 0) + vgetq_lane_f32(sum2, 1) + vgetq_lane_f32(sum2, 2) + vgetq_lane_f32(sum2, 3);
        pfResult[j*nC+i+3] = vgetq_lane_f32(sum3, 0) + vgetq_lane_f32(sum3, 1) + vgetq_lane_f32(sum3, 2) + vgetq_lane_f32(sum3, 3);*/
    }
}

int main(int argc, char *argv[]) {
	
	SgemmNeon(NULL, NULL, 0, 0, 0, NULL);
	
   std::cout << argv[0] << std::endl; return 0;
}